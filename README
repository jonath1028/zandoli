# 🦎 Zandoli - Furtive Network Scanner (V1)

Zandoli est un outil de reconnaissance réseau furtif écrit en Go. Il permet d’effectuer une détection d’hôtes actifs sur un réseau local via analyse passive ARP et scans ARP actifs (standard et furtif). Il est conçu pour les tests d’infrastructure, l’audit de réseau interne et les scénarios Red Team.

---

## ✨ Fonctionnalités de la V1

### 🔍 Détection passive ARP
- Sniffing réseau via `libpcap`
- Capture des paquets ARP pour détecter les hôtes actifs silencieusement
- Pas de génération de trafic réseau
- Durée configurable (`passive_duration`)

### 🛠️ Scan ARP actif (standard)
- Envoi de requêtes ARP à toutes les IPs du sous-réseau
- Interface d'injection avec `pcap`
- Évitement des IPs déjà découvertes en passif
- Exclusion automatique de l’IP locale

### 🕵️ Scan ARP furtif (`--stealthy`)
- Scan lent et espacé pour éviter la détection par IDS/IPS :
  - Maximum 15 requêtes toutes les 25 secondes
  - Maximum 5 requêtes par seconde
  - Délai aléatoire entre 150ms et 400ms entre les requêtes d’un même burst
  - Pause aléatoire de 1 à 3s entre les bursts
- Exclusion de l’IP locale
- Délai total géré pour rester discret

### 📤 Export des résultats
- Formats supportés : `JSON`, `CSV`, `HTML`
- Tous les fichiers sont nommés avec un timestamp ISO 8601
- Rapport HTML propre et lisible avec design intégré

### ⚙️ Configuration via YAML
- Interface réseau
- Durée de sniffing passif
- Dossier de sortie
- Fichier de log
- Liste d’IPs à exclure du scan (`exclude_ips`)

### 🧪 Tests unitaires
- `utils`, `sniffer`, `scanner` testés avec `testify`
- Cas limites vérifiés (timeout, boucle de capture, vidage de canaux)

### 🛠️ Makefile complet
- `make build` : compilation
- `make run` : exécution
- `make fmt` : formatage
- `make lint` : vérifications lint avec `gofmt`, `vet`, `staticcheck`
- `make test` : exécution de tous les tests
- `make check` : lint + build + test en une commande

### 🧾 Logging structuré
- `zerolog` utilisé avec timestamp
- Log fichier + console
- Verbosité activable via `--v`

---

## 🚀 Exécution

### Exemple standard :

```bash
./zandoli --config assets/config.yaml

